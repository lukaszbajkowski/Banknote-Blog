# Generated by Django 4.1.4 on 2023-01-02 10:07

import blog.models
import ckeditor.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tytuł')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Treść')),
                ('background', models.ImageField(upload_to='images/post/', verbose_name='Tło wpisu')),
                ('date_posted', models.DateTimeField(auto_now_add=True, verbose_name='Data publikacji')),
                ('date_edited', models.DateTimeField(auto_now=True, verbose_name='Data ostatniej edycji')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
        ),
        migrations.CreateModel(
            name='FavoriteBlog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Tytuł')),
                ('content', ckeditor.fields.RichTextField(verbose_name='Treść')),
                ('background', models.ImageField(upload_to='images/post/', verbose_name='Tło wpisu')),
                ('date_posted', models.DateTimeField(auto_now_add=True, verbose_name='Data publikacji')),
                ('date_edited', models.DateTimeField(auto_now=True, verbose_name='Data ostatniej edycji')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(validators=[blog.models.validate_content], verbose_name='Komentarz')),
                ('date_posted', models.DateTimeField(auto_now_add=True, verbose_name='Data publikacji')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Autor')),
                ('blog', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.blog', verbose_name='Wpis')),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(help_text='Krótka informacja o autorze, maksymalnie 256 znaków.', validators=[blog.models.validate_bio], verbose_name='O autorze')),
                ('profile_pic', models.ImageField(blank=True, null=True, upload_to='images/profile/', verbose_name='Zdjęcie profilowe')),
                ('author_url', models.URLField(blank=True, null=True, verbose_name='URL do strony użytkowanika')),
                ('pinterest_url', models.URLField(blank=True, null=True, validators=[blog.models.validate_pinterest], verbose_name='URL do Pinteresta')),
                ('facebook_url', models.URLField(blank=True, null=True, validators=[blog.models.validate_facebook], verbose_name='URL do Facebooka')),
                ('twitter_url', models.URLField(blank=True, null=True, validators=[blog.models.validate_twitter], verbose_name='URL do Twittera')),
                ('instagram_url', models.URLField(blank=True, null=True, validators=[blog.models.validate_instagram], verbose_name='URL do Instagrama')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
        ),
    ]
